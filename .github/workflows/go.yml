name: Go

on: [push]

jobs:
  # build:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Set up Go
  #       uses: actions/setup-go@v2
  #       with:
  #         go-version: 1.17

  #     - name: Build
  #       run: go build -v ./...

  # test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Set up Go
  #       uses: actions/setup-go@v2
  #       with:
  #         go-version: 1.17

  #     - name: Print vars
  #       run: |
  #         export
  #         go env

  #     - name: Test
  #       run: go test -v ./...

  notify:
    # needs:
    #   - build
    #   - test
    runs-on: ubuntu-latest
    steps:
      - name: Notify on success
      - uses: KlyuchnikovV/telegram-notify@v0.1.4
        if: always()
        with:
          chat_id: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          parse_mode: markdown
          message: |
            ‚úÖ Build [#${{ github.run_number }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) of "[${{ github.repository }}](${{ github.server_url }}/${{ github.repository }})" ${{ github.action_status }}.

            üìù Commit by ${{ github.actor }} on ${{ github.ref_name }}:
            ${{ github.event.head_commit.message }}

      # - name: Notify on failure
      # - uses: KlyuchnikovV/telegram-notify@v0.1.2
      #   if: ${{ github.action_status == "failure" }}
      #   with:
      #     chat_id: ${{ secrets.TELEGRAM_TO }}
      #     token: ${{ secrets.TELEGRAM_TOKEN }}
      #     parse_mode: markdown
      #     message: |
      #       ‚ùå Build [#${{ github.run_number }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) of "[${{ github.repository }}](${{ github.server_url }}/${{ github.repository }})" ${{ github.action_status }}.

      #       üìù Commit by ${{ github.actor }} on ${{ github.ref_name }}:
      #       ${{ github.event.head_commit.message }}
